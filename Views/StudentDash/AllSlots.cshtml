@model PaginatedList<Asr.Models.Slot>

@{
    ViewData["Title"] = "All Slots";
}

<h2>All Available Slots</h2>
<table class="table">
    <thead>
        <tr>
            <th>
                Room ID
            </th>
            <th>
                Student ID
            </th>
            <th>
                Start Time
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Where(x => x.StudentID == null).OrderBy(y => y.StartTime))
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Room.RoomID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Student.StudentID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartTime)
            </td>
            <td>
                <a asp-action="BookSlot" asp-route-roomid="@item.RoomID" asp-route-starttime="@item.StartTime">Book Slot</a> |
                <a asp-action="Details" asp-route-roomid="@item.RoomID" asp-route-starttime="@item.StartTime">Details</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="AllSlots"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="AllSlots"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>